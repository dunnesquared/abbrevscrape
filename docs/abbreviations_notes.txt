
abbrevscrape.py
–––––––––––––––

Description:
------------
Python script that scrapes abbreviations listed on OED website and adds them
to text file that will be read textanalysis module.

Script should
-------------
- Check robots.txt before scraping
- Prompt user before scraping: Not really necessary if done recently
- Download and save abbreviations to abbreviations.txt in textanalysis module.
- Not overwrite any abbreviations that are already in abbreviations.txt (OED seems not to have honorifics like Mr. and Dr. or vs., e.g. , i.e.
- Fail gracefully if website DNE or is unreachable
- Fail gracefully if cannot write to abbreviations.txt

Nice to have:
- Tell user when abbreviations.txt was last updated
- Not write to file if there have been no changes to abbreviation on OED (check when file was last modified? retain hash?)

Things to double-check:
-----------------------
Can textanalysis handle abbreviations of two words or more (e.g. Crim. Law; E. Angl.)?
	- It should so long as the first abbreviated word is in the file on its own. e.g. "Crim." in "Crim. Law" has its own entry.

Tests:
------
- previous nosetests (unit/integrated)
- use legal honorifics/abbreviations not in the OED
- 1-word abbreviation from OED
- 2-word abbreviation from OED; first word period
- ""; both words period
- Made-up abbreviation not in abbreviations.txt
- No internet connection
- Unable to reach website: DNE, timeout
- Unable to read robots.txt
- robots.txt allows scraping
- robots.txt does not allow scraping
- unable to write to abbreviations.txt: can't find, restricted access etc.
- quit if user decides not to scrape
- continue if user decides to continue scraping
- check no previous honorifics/abbreviations were overwritten
- (nice to have) don't update abbreviations.txt if OED page has not been updated



Algorithm
---------
1. Prompt user
2. Analyze robots.txt
3. Parse abbreviations page
4. Merge abbreviations currently in file with ones just scraped
4. Write to file

"For every input there should be only one output"

Prompt user:
------------
I: nil
O: True (continue)/ False(Quit)

Parse robots.txt
-----------------
I: url
O: True/False (can scrape/can't scrape)

Assumptions:
- connection good, url good, robots.txt is where we think it is.


Parse abbreviations page
------------------------
I: url
O: set* of abbrev


*not sure whether set is the best ds here

Assumptions:
- connection good, url good, permission to save file to target directory


Merge abbreviations currently in file with ones just scraped
------------------------------------------------------------
I: filename, set of abbrev
O: set of all abbrev



Write to file
--------------
I: filename, set of all abbrev
O: nil
